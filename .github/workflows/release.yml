name: Release
on:
  push:
    branches: [ develop ]
jobs:
  
  job1:
    name: Validar create release
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '[release]') }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
            python-version: '3.7'
      - name: Instalación de librerias y dependencias 
        run:  |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
      - name: Correr pruebas
        id: correr-pruebas
        run: python -m unittest discover -s tests -v
      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
      - name: Cálculo de cubrimiento
        id: cubrimiento
        run: |
            coverage run -m unittest discover -s tests -v
            coverage report -m
  
            
  automerge:
    name: Automerge
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          TAG_NAME: v-${{ steps.date.outputs.date }}
          RELEASE_NAME: v-${{ steps.date.outputs.date }}
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Crear rama
        run: |
            git checkout -b release/${{ steps.date.outputs.date }}
            git push -f -u origin release/${{ steps.date.outputs.date }}
      - name: Mezcla release -> main
        uses: tukasz/direct-merge-action@master 
        with:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           source-branch: release/${{ steps.date.outputs.date }}
           target-branch: main
